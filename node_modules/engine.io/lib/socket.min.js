function Socket(e,t,r,i){this.id=e,this.server=t,this.upgrading=!1,this.upgraded=!1,this.readyState="opening",this.writeBuffer=[],this.packetsFn=[],this.sentCallbackFn=[],this.cleanupFn=[],this.request=i,this.remoteAddress=i.connection.remoteAddress,this.checkIntervalTimer=null,this.upgradeTimeoutTimer=null,this.pingTimeoutTimer=null,this.setTransport(r),this.onOpen()}var EventEmitter=require("events").EventEmitter,util=require("util"),debug=require("debug")("engine:socket");module.exports=Socket,util.inherits(Socket,EventEmitter),Socket.prototype.onOpen=function(){this.readyState="open",this.transport.sid=this.id,this.sendPacket("open",JSON.stringify({sid:this.id,upgrades:this.getAvailableUpgrades(),pingInterval:this.server.pingInterval,pingTimeout:this.server.pingTimeout})),this.emit("open"),this.setPingTimeout()},Socket.prototype.onPacket=function(e){if("open"===this.readyState)switch(debug("packet"),this.emit("packet",e),this.setPingTimeout(),e.type){case"ping":debug("got ping"),this.sendPacket("pong"),this.emit("heartbeat");break;case"error":this.onClose("parse error");break;case"message":this.emit("data",e.data),this.emit("message",e.data)}else debug("packet received with closed socket")},Socket.prototype.onError=function(e){debug("transport error"),this.onClose("transport error",e)},Socket.prototype.setPingTimeout=function(){var e=this;clearTimeout(e.pingTimeoutTimer),e.pingTimeoutTimer=setTimeout(function(){e.onClose("ping timeout")},e.server.pingInterval+e.server.pingTimeout)},Socket.prototype.setTransport=function(e){var t=this.onError.bind(this),r=this.onPacket.bind(this),i=this.flush.bind(this),n=this.onClose.bind(this,"transport close");this.transport=e,this.transport.once("error",t),this.transport.on("packet",r),this.transport.on("drain",i),this.transport.once("close",n),this.setupSendCallback(),this.cleanupFn.push(function(){e.removeListener("error",t),e.removeListener("packet",r),e.removeListener("drain",i),e.removeListener("close",n)})},Socket.prototype.maybeUpgrade=function(e){function r(r){"ping"===r.type&&"probe"===r.data?(e.send([{type:"pong",data:"probe"}]),t.emit("upgrading",e),clearInterval(t.checkIntervalTimer),t.checkIntervalTimer=setInterval(i,100)):"upgrade"===r.type&&"closed"!==t.readyState?(debug("got upgrade packet - upgrading"),n(),t.transport.discard(),t.upgraded=!0,t.clearTransport(),t.setTransport(e),t.emit("upgrade",e),t.setPingTimeout(),t.flush(),"closing"===t.readyState&&e.close(function(){t.onClose("forced close")})):(n(),e.close())}function i(){"polling"===t.transport.name&&t.transport.writable&&(debug("writing a noop packet to polling for fast upgrade"),t.transport.send([{type:"noop"}]))}function n(){t.upgrading=!1,clearInterval(t.checkIntervalTimer),t.checkIntervalTimer=null,clearTimeout(t.upgradeTimeoutTimer),t.upgradeTimeoutTimer=null,e.removeListener("packet",r),e.removeListener("close",a),e.removeListener("error",s),t.removeListener("close",o)}function s(t){debug("client did not complete upgrade - %s",t),n(),e.close(),e=null}function a(){s("transport closed")}function o(){s("socket closed")}debug('might upgrade socket transport from "%s" to "%s"',this.transport.name,e.name),this.upgrading=!0;var t=this;t.upgradeTimeoutTimer=setTimeout(function(){debug("client did not complete upgrade - closing transport"),n(),"open"===e.readyState&&e.close()},this.server.upgradeTimeout),e.on("packet",r),e.once("close",a),e.once("error",s),t.once("close",o)},Socket.prototype.clearTransport=function(){for(var e,t=this.cleanupFn.length,r=0;t>r;r++)(e=this.cleanupFn.shift())();this.transport.on("error",function(){debug("error triggered by discarded transport")}),this.transport.close(),clearTimeout(this.pingTimeoutTimer)},Socket.prototype.onClose=function(e,t){if("closed"!==this.readyState){this.readyState="closed",clearTimeout(this.pingTimeoutTimer),clearInterval(this.checkIntervalTimer),this.checkIntervalTimer=null,clearTimeout(this.upgradeTimeoutTimer);var r=this;process.nextTick(function(){r.writeBuffer=[]}),this.packetsFn=[],this.sentCallbackFn=[],this.clearTransport(),this.emit("close",e,t)}},Socket.prototype.setupSendCallback=function(){function t(){if(e.sentCallbackFn.length>0){var t=e.sentCallbackFn.splice(0,1)[0];if("function"==typeof t)debug("executing send callback"),t(e.transport);else if(Array.isArray(t)){debug("executing batch send callback");for(var r=t.length,i=0;r>i;i++)"function"==typeof t[i]&&t[i](e.transport)}}}var e=this;this.transport.on("drain",t),this.cleanupFn.push(function(){e.transport.removeListener("drain",t)})},Socket.prototype.send=Socket.prototype.write=function(e,t,r){return this.sendPacket("message",e,t,r),this},Socket.prototype.sendPacket=function(e,t,r,i){if("function"==typeof r&&(i=r,r=null),r=r||{},r.compress=!1!==r.compress,"closing"!==this.readyState){debug('sending packet "%s" (%s)',e,t);var n={type:e,options:r};t&&(n.data=t),this.emit("packetCreate",n),this.writeBuffer.push(n),i&&this.packetsFn.push(i),this.flush()}},Socket.prototype.flush=function(){if("closed"!==this.readyState&&this.transport.writable&&this.writeBuffer.length){debug("flushing buffer to transport"),this.emit("flush",this.writeBuffer),this.server.emit("flush",this,this.writeBuffer);var e=this.writeBuffer;this.writeBuffer=[],this.transport.supportsFraming?this.sentCallbackFn.push.apply(this.sentCallbackFn,this.packetsFn):this.sentCallbackFn.push(this.packetsFn),this.packetsFn=[],this.transport.send(e),this.emit("drain"),this.server.emit("drain",this)}},Socket.prototype.getAvailableUpgrades=function(){for(var e=[],t=this.server.upgrades(this.transport.name),r=0,i=t.length;i>r;++r){var n=t[r];-1!==this.server.transports.indexOf(n)&&e.push(n)}return e},Socket.prototype.close=function(e){return"open"===this.readyState?(this.readyState="closing",this.writeBuffer.length?void this.once("drain",this.closeTransport.bind(this,e)):void this.closeTransport(e)):void 0},Socket.prototype.closeTransport=function(e){e&&this.transport.discard(),this.transport.close(this.onClose.bind(this,"forced close"))};