function Client(e,t){this.server=e,this.conn=t,this.encoder=new parser.Encoder,this.decoder=new parser.Decoder,this.id=t.id,this.request=t.request,this.setup(),this.sockets={},this.nsps={},this.connectBuffer=[]}var parser=require("socket.io-parser"),debug=require("debug")("socket.io:client"),url=require("url");module.exports=Client,Client.prototype.setup=function(){this.onclose=this.onclose.bind(this),this.ondata=this.ondata.bind(this),this.onerror=this.onerror.bind(this),this.ondecoded=this.ondecoded.bind(this),this.decoder.on("decoded",this.ondecoded),this.conn.on("data",this.ondata),this.conn.on("error",this.onerror),this.conn.on("close",this.onclose)},Client.prototype.connect=function(e,t){debug("connecting to namespace %s",e);var r=this.server.nsps[e];if(!r)return void this.packet({type:parser.ERROR,nsp:e,data:"Invalid namespace"});if("/"!=e&&!this.nsps["/"])return void this.connectBuffer.push(e);var i=this,n=r.add(this,t,function(){i.sockets[n.id]=n,i.nsps[r.name]=n,"/"==r.name&&i.connectBuffer.length>0&&(i.connectBuffer.forEach(i.connect,i),i.connectBuffer=[])})},Client.prototype.disconnect=function(){for(var e in this.sockets)this.sockets.hasOwnProperty(e)&&this.sockets[e].disconnect();this.sockets={},this.close()},Client.prototype.remove=function(e){if(this.sockets.hasOwnProperty(e.id)){var t=this.sockets[e.id].nsp.name;delete this.sockets[e.id],delete this.nsps[t]}else debug("ignoring remove for %s",e.id)},Client.prototype.close=function(){"open"==this.conn.readyState&&(debug("forcing transport close"),this.conn.close(),this.onclose("forced server close"))},Client.prototype.packet=function(e,t){function i(e){if(!t["volatile"]||r.conn.transport.writable)for(var i=0;i<e.length;i++)r.conn.write(e[i],{compress:t.compress})}t=t||{};var r=this;"open"==this.conn.readyState?(debug("writing packet %j",e),t.preEncoded?i(e):this.encoder.encode(e,function(e){i(e)})):debug("ignoring packet write %j",e)},Client.prototype.ondata=function(e){try{this.decoder.add(e)}catch(t){this.onerror(t)}},Client.prototype.ondecoded=function(e){if(parser.CONNECT==e.type)this.connect(url.parse(e.nsp).pathname,url.parse(e.nsp,!0).query);else{var t=this.nsps[e.nsp];t?process.nextTick(function(){t.onpacket(e)}):debug("no socket for namespace %s",e.nsp)}},Client.prototype.onerror=function(e){for(var t in this.sockets)this.sockets.hasOwnProperty(t)&&this.sockets[t].onerror(e);this.onclose("client error")},Client.prototype.onclose=function(e){debug("client close with reason %s",e),this.destroy();for(var t in this.sockets)this.sockets.hasOwnProperty(t)&&this.sockets[t].onclose(e);this.sockets={},this.decoder.destroy()},Client.prototype.destroy=function(){this.conn.removeListener("data",this.ondata),this.conn.removeListener("error",this.onerror),this.conn.removeListener("close",this.onclose),this.decoder.removeListener("decoded",this.ondecoded)};