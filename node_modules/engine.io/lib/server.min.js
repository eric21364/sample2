function Server(e){if(!(this instanceof Server))return new Server(e);this.clients={},this.clientsCount=0,e=e||{},this.wsEngine=e.wsEngine||process.env.EIO_WS_ENGINE,this.pingTimeout=e.pingTimeout||6e4,this.pingInterval=e.pingInterval||25e3,this.upgradeTimeout=e.upgradeTimeout||1e4,this.maxHttpBufferSize=e.maxHttpBufferSize||1e8,this.transports=e.transports||Object.keys(transports),this.allowUpgrades=!1!==e.allowUpgrades,this.allowRequest=e.allowRequest,this.cookie=!1!==e.cookie?e.cookie||"io":!1,this.cookiePath=!1!==e.cookiePath?e.cookiePath||"/":!1,this.cookieHttpOnly=!1!==e.cookieHttpOnly,this.perMessageDeflate=!1!==e.perMessageDeflate?e.perMessageDeflate||!0:!1,this.httpCompression=!1!==e.httpCompression?e.httpCompression||{}:!1;var t=this;if(["perMessageDeflate","httpCompression"].forEach(function(e){var r=t[e];!0===r&&(t[e]=r={}),r&&null==r.threshold&&(r.threshold=1024)}),~this.transports.indexOf("websocket")){var r=(this.wsEngine?require(this.wsEngine):require("ws")).Server;this.ws=new r({noServer:!0,clientTracking:!1,perMessageDeflate:this.perMessageDeflate,maxPayload:this.maxHttpBufferSize})}}function sendErrorMessage(e,t,r){var i={"Content-Type":"application/json"};e.headers.origin?(i["Access-Control-Allow-Credentials"]="true",i["Access-Control-Allow-Origin"]=e.headers.origin):i["Access-Control-Allow-Origin"]="*",t.writeHead(400,i),t.end(JSON.stringify({code:r,message:Server.errorMessages[r]}))}function abortConnection(e,t){if(e.writable){var r=Server.errorMessages.hasOwnProperty(t)?Server.errorMessages[t]:t,i=Buffer.byteLength(r);e.write("HTTP/1.1 400 Bad Request\r\nConnection: close\r\nContent-type: text/html\r\nContent-Length: "+i+"\r\n\r\n"+r)}e.destroy()}var qs=require("querystring"),parse=require("url").parse,base64id=require("base64id"),transports=require("./transports"),EventEmitter=require("events").EventEmitter,Socket=require("./socket"),util=require("util"),debug=require("debug")("engine"),cookieMod=require("cookie");module.exports=Server,Server.errors={UNKNOWN_TRANSPORT:0,UNKNOWN_SID:1,BAD_HANDSHAKE_METHOD:2,BAD_REQUEST:3},Server.errorMessages={0:"Transport unknown",1:"Session ID unknown",2:"Bad handshake method",3:"Bad request"},util.inherits(Server,EventEmitter),Server.prototype.clients,Server.prototype.upgrades=function(e){return this.allowUpgrades?transports[e].upgradesTo||[]:[]},Server.prototype.verify=function(e,t,r){var i=e._query.transport;if(!~this.transports.indexOf(i))return debug('unknown transport "%s"',i),r(Server.errors.UNKNOWN_TRANSPORT,!1);var n=e._query.sid;return n?this.clients.hasOwnProperty(n)?t||this.clients[n].transport.name===i?void r(null,!0):(debug("bad request: unexpected transport without upgrade"),r(Server.errors.BAD_REQUEST,!1)):r(Server.errors.UNKNOWN_SID,!1):"GET"!==e.method?r(Server.errors.BAD_HANDSHAKE_METHOD,!1):this.allowRequest?this.allowRequest(e,r):r(null,!0)},Server.prototype.prepare=function(e){e._query||(e._query=~e.url.indexOf("?")?qs.parse(parse(e.url).query):{})},Server.prototype.close=function(){debug("closing all open clients");for(var e in this.clients)this.clients.hasOwnProperty(e)&&this.clients[e].close(!0);return this.ws&&(debug("closing webSocketServer"),this.ws.close()),this},Server.prototype.handleRequest=function(e,t){debug('handling "%s" http request "%s"',e.method,e.url),this.prepare(e),e.res=t;var r=this;this.verify(e,!1,function(i,n){return n?void(e._query.sid?(debug("setting new request for existing client"),r.clients[e._query.sid].transport.onRequest(e)):r.handshake(e._query.transport,e)):void sendErrorMessage(e,t,i)})},Server.prototype.generateId=function(e){return base64id.generateId()},Server.prototype.handshake=function(e,t){var r=this.generateId(t);debug('handshaking client "%s"',r);try{var i=new transports[e](t);"polling"===e?(i.maxHttpBufferSize=this.maxHttpBufferSize,i.httpCompression=this.httpCompression):"websocket"===e&&(i.perMessageDeflate=this.perMessageDeflate),t._query&&t._query.b64?i.supportsBinary=!1:i.supportsBinary=!0}catch(n){return void sendErrorMessage(t,t.res,Server.errors.BAD_REQUEST)}var s=new Socket(r,this,i,t),a=this;!1!==this.cookie&&i.on("headers",function(e){e["Set-Cookie"]=cookieMod.serialize(a.cookie,r,{path:a.cookiePath,httpOnly:a.cookiePath?a.cookieHttpOnly:!1})}),i.onRequest(t),this.clients[r]=s,this.clientsCount++,s.once("close",function(){delete a.clients[r],a.clientsCount--}),this.emit("connection",s)},Server.prototype.handleUpgrade=function(e,t,r){this.prepare(e);var i=this;this.verify(e,!0,function(n,s){if(!s)return void abortConnection(t,n);var a=new Buffer(r.length);r.copy(a),r=null,i.ws.handleUpgrade(e,t,a,function(t){i.onWebSocket(e,t)})})},Server.prototype.onWebSocket=function(e,t){function s(){debug("websocket error before upgrade")}if(t.on("error",s),!transports[e._query.transport].prototype.handlesUpgrades)return debug("transport doesnt handle upgraded requests"),void t.close();var r=e._query.sid;if(e.websocket=t,r){var i=this.clients[r];if(i)if(i.upgrading)debug("transport has already been trying to upgrade"),t.close();else if(i.upgraded)debug("transport had already been upgraded"),t.close();else{debug("upgrading existing transport"),t.removeListener("error",s);var n=new transports[e._query.transport](e);e._query&&e._query.b64?n.supportsBinary=!1:n.supportsBinary=!0,n.perMessageDeflate=this.perMessageDeflate,i.maybeUpgrade(n)}else debug("upgrade attempt for closed client"),t.close()}else t.removeListener("error",s),this.handshake(e._query.transport,e)},Server.prototype.attach=function(e,t){function s(e){return i===e.url.substr(0,i.length)}var r=this;t=t||{};var i=(t.path||"/engine.io").replace(/\/$/,""),n=t.destroyUpgradeTimeout||1e3;i+="/";var a=e.listeners("request").slice(0);e.removeAllListeners("request"),e.on("close",r.close.bind(r)),e.on("request",function(t,n){if(s(t))debug('intercepting request for path "%s"',i),r.handleRequest(t,n);else for(var o=0,h=a.length;h>o;o++)a[o].call(e,t,n)}),~r.transports.indexOf("websocket")&&e.on("upgrade",function(e,i,a){s(e)?r.handleUpgrade(e,i,a):!1!==t.destroyUpgrade&&setTimeout(function(){return i.writable&&i.bytesWritten<=0?i.end():void 0},n)})};