"use strict";function parse(e,t){t.lexer&&console.warn("Using `lexer` as a local in render() is deprecated and will be interpreted as an option in Jade 2.0.0");var i,r=new(t.parser||Parser)(e,t.filename,t);try{i=r.parse()}catch(n){r=r.context(),runtime.rethrow(n,r.filename,r.lexer.lineno,r.input)}var a,s=new(t.compiler||Compiler)(i,t);try{a=s.compile()}catch(n){if(!n.line||!n.filename&&t.filename)throw n instanceof Error&&(n.message+="\n\nPlease report this entire error and stack trace to https://github.com/jadejs/jade/issues"),n;runtime.rethrow(n,n.filename,n.line,r.input)}t.debug&&console.error("\nCompiled Function:\n\n[90m%s[0m",a.replace(/^/gm,"  "));var o=[];t.globals&&(o=t.globals.slice()),o.push("jade"),o.push("jade_mixins"),o.push("jade_interp"),o.push("jade_debug"),o.push("buf");var u="var buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n"+(t.self?"var self = locals || {};\n"+a:addWith("locals || {}","\n"+a,o))+';return buf.join("");';return{body:u,dependencies:r.dependencies}}function handleTemplateCache(e,t){var r=e.filename;if(e.cache&&exports.cache[r])return exports.cache[r];void 0===t&&(t=fs.readFileSync(e.filename,"utf8"));var i=exports.compile(t,e);return e.cache&&(exports.cache[r]=i),i}var Parser=require("./parser"),Lexer=require("./lexer"),Compiler=require("./compiler"),runtime=require("./runtime"),addWith=require("with"),fs=require("fs"),utils=require("./utils");exports.selfClosing=Object.keys(require("void-elements")),exports.doctypes=require("./doctypes"),exports.filters=require("./filters"),exports.utils=utils,exports.Compiler=Compiler,exports.Parser=Parser,exports.Lexer=Lexer,exports.nodes=require("./nodes"),exports.runtime=runtime,exports.cache={},exports.compile=function(e,t){var i,t=t||{},r=t.filename?utils.stringify(t.filename):"undefined";e=String(e);var n=parse(e,t);i=t.compileDebug!==!1?["var jade_debug = [ new jade.DebugItem( 1, "+r+" ) ];","try {",n.body,"} catch (err) {","  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno"+(t.compileDebug===!0?","+utils.stringify(e):"")+");","}"].join("\n"):n.body,i=new Function("locals, jade",i);var s=function(e){return i(e,Object.create(runtime))};return t.client&&(s.toString=function(){var r=new Error("The `client` option is deprecated, use the `jade.compileClient` method instead");return r.name="Warning",console.error(r.stack||r.message),exports.compileClient(e,t)}),s.dependencies=n.dependencies,s},exports.compileClientWithDependenciesTracked=function(e,t){var n,t=t||{},r=t.name||"template",i=t.filename?utils.stringify(t.filename):"undefined";e=String(e),t.compileDebug=t.compileDebug?!0:!1;var s=parse(e,t);return n=t.compileDebug?["var jade_debug = [ new jade.DebugItem( 1, "+i+" ) ];","try {",s.body,"} catch (err) {","  jade.rethrow(err, jade_debug[0].filename, jade_debug[0].lineno, "+utils.stringify(e)+");","}"].join("\n"):s.body,{body:"function "+r+"(locals) {\n"+n+"\n}",dependencies:s.dependencies}},exports.compileClient=function(e,t){return exports.compileClientWithDependenciesTracked(e,t).body},exports.compileFile=function(e,t){return t=t||{},t.filename=e,handleTemplateCache(t)},exports.render=function(e,t,r){if("function"==typeof t&&(r=t,t=void 0),"function"==typeof r){var i;try{i=exports.render(e,t)}catch(n){return r(n)}return r(null,i)}if(t=t||{},t.cache&&!t.filename)throw new Error('the "filename" option is required for caching');return handleTemplateCache(t,e)(t)},exports.renderFile=function(e,t,r){if("function"==typeof t&&(r=t,t=void 0),"function"==typeof r){var i;try{i=exports.renderFile(e,t)}catch(n){return r(n)}return r(null,i)}return t=t||{},t.filename=e,handleTemplateCache(t)(t)},exports.compileFileClient=function(e,t){var r=e+":client";if(t=t||{},t.filename=e,t.cache&&exports.cache[r])return exports.cache[r];var i=fs.readFileSync(t.filename,"utf8"),n=exports.compileClient(i,t);return t.cache&&(exports.cache[r]=n),n},exports.__express=function(e,t,r){void 0==t.compileDebug&&"production"===process.env.NODE_ENV&&(t.compileDebug=!1),exports.renderFile(e,t,r)};