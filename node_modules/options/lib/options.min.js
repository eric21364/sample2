function Options(e){var t={},r=this.value={};Object.keys(e).forEach(function(i){t[i]=e[i],Object.defineProperty(r,i,{get:function(){return t[i]},configurable:!1,enumerable:!0})}),this.reset=function(){return Object.keys(e).forEach(function(r){t[r]=e[r]}),this},this.merge=function(e,r){if(e=e||{},"[object Array]"===Object.prototype.toString.call(r)){for(var i=[],n=0,s=r.length;s>n;++n){var a=r[n];a in e||i.push(a)}if(i.length>0)throw i.length>1?new Error("options "+i.slice(0,i.length-1).join(", ")+" and "+i[i.length-1]+" must be defined"):new Error("option "+i[0]+" must be defined")}return Object.keys(e).forEach(function(r){r in t&&(t[r]=e[r])}),this},this.copy=function(t){var i={};return Object.keys(e).forEach(function(e){-1!==t.indexOf(e)&&(i[e]=r[e])}),i},this.read=function(e,t){if("function"==typeof t){var r=this;fs.readFile(e,function(e,i){if(e)return t(e);var n=JSON.parse(i);r.merge(n),t()})}else{var i=JSON.parse(fs.readFileSync(e));this.merge(i)}return this},this.isDefined=function(e){return"undefined"!=typeof r[e]},this.isDefinedAndNonNull=function(e){return"undefined"!=typeof r[e]&&null!==r[e]},Object.freeze(r),Object.freeze(this)}var fs=require("fs");module.exports=Options;