"use strict";function Utf16BECodec(){}function Utf16BEEncoder(){}function Utf16BEDecoder(){this.overflowByte=-1}function Utf16Codec(e,t){this.iconv=t}function Utf16Encoder(e,t){e=e||{},void 0===e.addBOM&&(e.addBOM=!0),this.encoder=t.iconv.getEncoder("utf-16le",e)}function Utf16Decoder(e,t){this.decoder=null,this.initialBytes=[],this.initialBytesLen=0,this.options=e||{},this.iconv=t.iconv}function detectEncoding(e,t){var r=t||"utf-16le";if(e.length>=2)if(254==e[0]&&255==e[1])r="utf-16be";else if(255==e[0]&&254==e[1])r="utf-16le";else{for(var i=0,n=0,s=Math.min(e.length-e.length%2,64),a=0;s>a;a+=2)0===e[a]&&0!==e[a+1]&&n++,0!==e[a]&&0===e[a+1]&&i++;n>i?r="utf-16be":i>n&&(r="utf-16le")}return r}exports.utf16be=Utf16BECodec,Utf16BECodec.prototype.encoder=Utf16BEEncoder,Utf16BECodec.prototype.decoder=Utf16BEDecoder,Utf16BECodec.prototype.bomAware=!0,Utf16BEEncoder.prototype.write=function(e){for(var t=new Buffer(e,"ucs2"),r=0;r<t.length;r+=2){var i=t[r];t[r]=t[r+1],t[r+1]=i}return t},Utf16BEEncoder.prototype.end=function(){},Utf16BEDecoder.prototype.write=function(e){if(0==e.length)return"";var t=new Buffer(e.length+1),r=0,i=0;for(-1!==this.overflowByte&&(t[0]=e[0],t[1]=this.overflowByte,r=1,i=2);r<e.length-1;r+=2,i+=2)t[i]=e[r+1],t[i+1]=e[r];return this.overflowByte=r==e.length-1?e[e.length-1]:-1,t.slice(0,i).toString("ucs2")},Utf16BEDecoder.prototype.end=function(){},exports.utf16=Utf16Codec,Utf16Codec.prototype.encoder=Utf16Encoder,Utf16Codec.prototype.decoder=Utf16Decoder,Utf16Encoder.prototype.write=function(e){return this.encoder.write(e)},Utf16Encoder.prototype.end=function(){return this.encoder.end()},Utf16Decoder.prototype.write=function(e){if(!this.decoder){if(this.initialBytes.push(e),this.initialBytesLen+=e.length,this.initialBytesLen<16)return"";var e=Buffer.concat(this.initialBytes),t=detectEncoding(e,this.options.defaultEncoding);this.decoder=this.iconv.getDecoder(t,this.options),this.initialBytes.length=this.initialBytesLen=0}return this.decoder.write(e)},Utf16Decoder.prototype.end=function(){if(!this.decoder){var e=Buffer.concat(this.initialBytes),t=detectEncoding(e,this.options.defaultEncoding);this.decoder=this.iconv.getDecoder(t,this.options);var r=this.decoder.write(e),i=this.decoder.end();return i?r+i:r}return this.decoder.end()};