var Blob=require("../"),expect=require("expect.js");describe("blob",function(){Blob?(it("should encode a proper sized blob when given a string argument",function(){var t=new Blob(["hi"]);expect(t.size).to.be(2)}),it("should encode a blob with proper size when given two strings as arguments",function(){var t=new Blob(["hi","hello"]);expect(t.size).to.be(7)}),it("should encode arraybuffers with right content",function(t){for(var e=new Uint8Array(5),r=0;5>r;r++)e[r]=r;var i=new Blob([e.buffer]),n=new FileReader;n.onload=function(){for(var e=new Uint8Array(this.result),r=0;5>r;r++)expect(e[r]).to.be(r);t()},n.readAsArrayBuffer(i)}),it("should encode typed arrays with right content",function(t){for(var e=new Uint8Array(5),r=0;5>r;r++)e[r]=r;var i=new Blob([e]),n=new FileReader;n.onload=function(){for(var e=new Uint8Array(this.result),r=0;5>r;r++)expect(e[r]).to.be(r);t()},n.readAsArrayBuffer(i)}),it("should encode sliced typed arrays with right content",function(t){for(var e=new Uint8Array(5),r=0;5>r;r++)e[r]=r;var i=new Blob([e.subarray(2)]),n=new FileReader;n.onload=function(){for(var e=new Uint8Array(this.result),r=0;3>r;r++)expect(e[r]).to.be(r+2);t()},n.readAsArrayBuffer(i)}),it("should encode with blobs",function(t){for(var e=new Uint8Array(5),r=0;5>r;r++)e[r]=r;var i=new Blob([new Blob([e.buffer])]),n=new FileReader;n.onload=function(){for(var e=new Uint8Array(this.result),r=0;5>r;r++)expect(e[r]).to.be(r);t()},n.readAsArrayBuffer(i)}),it("should enode mixed contents to right size",function(){for(var t=new Uint8Array(5),e=0;5>e;e++)t[e]=e;var r=new Blob([t.buffer,"hello"]);expect(r.size).to.be(10)}),it("should accept mime type",function(){var t=new Blob(["hi","hello"],{type:"text/html"});expect(t.type).to.be("text/html")})):it("should not have a blob or a blob builder in the global namespace, or blob should not be a constructor function if the module exports false",function(){try{var t=new Uint8Array(5).buffer;global.Blob([t]),expect().fail("Blob shouldn't be constructable")}catch(e){}var r=global.BlobBuilder||global.WebKitBlobBuilder||global.MSBlobBuilder||global.MozBlobBuilder;expect(r).to.be(void 0)})});