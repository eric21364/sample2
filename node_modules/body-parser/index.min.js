"use strict";function bodyParser(t){var e={};if(t)for(var n in t)"type"!==n&&(e[n]=t[n]);var i=exports.urlencoded(e),a=exports.json(e);return function(t,e,n){a(t,e,function(a){return a?n(a):void i(t,e,n)})}}function createParserGetter(t){return function(){return loadParser(t)}}function loadParser(t){var e=parsers[t];if(void 0!==e)return e;switch(t){case"json":e=require("./lib/types/json");break;case"raw":e=require("./lib/types/raw");break;case"text":e=require("./lib/types/text");break;case"urlencoded":e=require("./lib/types/urlencoded")}return parsers[t]=e}var deprecate=require("depd")("body-parser"),parsers=Object.create(null);exports=module.exports=deprecate["function"](bodyParser,"bodyParser: use individual json/urlencoded middlewares"),Object.defineProperty(exports,"json",{configurable:!0,enumerable:!0,get:createParserGetter("json")}),Object.defineProperty(exports,"raw",{configurable:!0,enumerable:!0,get:createParserGetter("raw")}),Object.defineProperty(exports,"text",{configurable:!0,enumerable:!0,get:createParserGetter("text")}),Object.defineProperty(exports,"urlencoded",{configurable:!0,enumerable:!0,get:createParserGetter("urlencoded")});