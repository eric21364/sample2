var sliceBuffer=require("../index.js"),expect=require("expect.js");describe("sliceBuffer",function(){describe("using standard slice",function(){it("should slice correctly with only start provided",function(){for(var t=new Uint8Array(10),e=0;e<t.length;e++)t[e]=e;for(var r=sliceBuffer(t.buffer,3),i=new Uint8Array(r),e=3,n=0;e<t.length;e++,n++)expect(t[e]).to.equal(i[n])}),it("should slice correctly with start and end provided",function(){for(var t=new Uint8Array(10),e=0;e<t.length;e++)t[e]=e;for(var r=sliceBuffer(t.buffer,3,8),i=new Uint8Array(r),e=3,n=0;8>e;e++,n++)expect(t[e]).to.equal(i[n])}),it("should slice correctly with negative start",function(){for(var t=new Uint8Array(10),e=0;e<t.length;e++)t[e]=e;for(var r=sliceBuffer(t.buffer,-3),i=new Uint8Array(r),e=t.length-3,n=0;e<t.length;e++,n++)expect(t[e]).to.equal(i[n])}),it("should slice correctly with negative end",function(){for(var t=new Uint8Array(10),e=0;e<t.length;e++)t[e]=e;for(var r=sliceBuffer(t.buffer,0,-3),i=new Uint8Array(r),e=0,n=0;e<t.length-3;e++,n++)expect(t[e]).to.equal(i[n])}),it("should slice correctly with negative start and end",function(){for(var t=new Uint8Array(10),e=0;e<t.length;e++)t[e]=e;for(var r=sliceBuffer(t.buffer,-6,-3),i=new Uint8Array(r),e=t.length-6,n=0;e<t.length-3;e++,n++)expect(t[e]).to.equal(i[n])}),it("should slice correctly with equal start and end",function(){for(var t=new Uint8Array(10),e=0;e<t.length;e++)t[e]=e;var r=sliceBuffer(t.buffer,1,1);expect(r.byteLength).to.equal(0)}),it("should slice correctly when end larger than buffer",function(){for(var t=new Uint8Array(10),e=0;e<t.length;e++)t[e]=e;var r=sliceBuffer(t.buffer,0,100);expect(new Uint8Array(r)).to.eql(t)}),it("shoud slice correctly when start larger than end",function(){for(var t=new Uint8Array(10),e=0;e<t.length;e++)t[e]=e;var r=sliceBuffer(t.buffer,6,5);expect(r.byteLength).to.equal(0)})}),describe("using fallback",function(){it("should slice correctly with only start provided",function(){for(var t=new Uint8Array(10),e=0;e<t.length;e++)t[e]=e;var r=t.buffer;r.slice=void 0;for(var i=sliceBuffer(r,3),n=new Uint8Array(i),e=3,s=0;e<t.length;e++,s++)expect(t[e]).to.equal(n[s])}),it("should slice correctly with start and end provided",function(){for(var t=new Uint8Array(10),e=0;e<t.length;e++)t[e]=e;var r=t.buffer;r.slice=void 0;for(var i=sliceBuffer(r,3,8),n=new Uint8Array(i),e=3,s=0;8>e;e++,s++)expect(t[e]).to.equal(n[s])}),it("should slice correctly with negative start",function(){for(var t=new Uint8Array(10),e=0;e<t.length;e++)t[e]=e;var r=t.buffer;r.slice=void 0;for(var i=sliceBuffer(r,-3),n=new Uint8Array(i),e=t.length-3,s=0;e<t.length;e++,s++)expect(t[e]).to.equal(n[s])}),it("should slice correctly with negative end",function(){for(var t=new Uint8Array(10),e=0;e<t.length;e++)t[e]=e;var r=t.buffer;r.slice=void 0;for(var i=sliceBuffer(r,0,-3),n=new Uint8Array(i),e=0,s=0;e<t.length-3;e++,s++)expect(t[e]).to.equal(n[s])}),it("should slice correctly with negative start and end",function(){for(var t=new Uint8Array(10),e=0;e<t.length;e++)t[e]=e;var r=t.buffer;r.slice=void 0;for(var i=sliceBuffer(r,-6,-3),n=new Uint8Array(i),e=t.length-6,s=0;e<t.length-3;e++,s++)expect(t[e]).to.equal(n[s])}),it("should slice correctly with equal start and end",function(){for(var t=new Uint8Array(10),e=0;e<t.length;e++)t[e]=e;var r=t.buffer;r.slice=void 0;var i=sliceBuffer(r,1,1);expect(i.byteLength).to.equal(0)}),it("should slice correctly when end larger than buffer",function(){for(var t=new Uint8Array(10),e=0;e<t.length;e++)t[e]=e;var r=t.buffer;r.slice=void 0;for(var i=sliceBuffer(r,0,100),n=new Uint8Array(i),e=0;e<t.length;e++)expect(t[e]).to.equal(n[e])}),it("shoud slice correctly when start larger than end",function(){for(var t=new Uint8Array(10),e=0;e<t.length;e++)t[e]=e;var r=t.buffer;r.slice=void 0;var i=sliceBuffer(r,6,5);expect(i.byteLength).to.equal(0)})})});