function Pool(e){EventEmitter.call(this),this.config=e.config,this.config.connectionConfig.pool=this,this._acquiringConnections=[],this._allConnections=[],this._freeConnections=[],this._connectionQueue=[],this._closed=!1}function spliceConnection(e,t){var r;-1!==(r=e.indexOf(t))&&e.splice(r,1)}var mysql=require("../"),Connection=require("./Connection"),EventEmitter=require("events").EventEmitter,Util=require("util"),PoolConnection=require("./PoolConnection");module.exports=Pool,Util.inherits(Pool,EventEmitter),Pool.prototype.getConnection=function(e){if(this._closed){var t=new Error("Pool is closed.");return t.code="POOL_CLOSED",void process.nextTick(function(){e(t)})}var r,i=this;return this._freeConnections.length>0?(r=this._freeConnections.shift(),void this.acquireConnection(r,e)):0===this.config.connectionLimit||this._allConnections.length<this.config.connectionLimit?(r=new PoolConnection(this,{config:this.config.newConnectionConfig()}),this._acquiringConnections.push(r),this._allConnections.push(r),void r.connect({timeout:this.config.acquireTimeout},function(t){return spliceConnection(i._acquiringConnections,r),i._closed&&(t=new Error("Pool is closed."),t.code="POOL_CLOSED"),t?(i._purgeConnection(r),void e(t)):(i.emit("connection",r),i.emit("acquire",r),void e(null,r))})):this.config.waitForConnections?void this._enqueueCallback(e):void process.nextTick(function(){var t=new Error("No connections available.");t.code="POOL_CONNLIMIT",e(t)})},Pool.prototype.acquireConnection=function(e,t){function n(n){return spliceConnection(i._acquiringConnections,e),i._closed&&(n=new Error("Pool is closed."),n.code="POOL_CLOSED"),n?(i._connectionQueue.unshift(t),void i._purgeConnection(e)):(r&&i.emit("connection",e),i.emit("acquire",e),void t(null,e))}if(e._pool!==this)throw new Error("Connection acquired from wrong pool.");var r=this._needsChangeUser(e),i=this;this._acquiringConnections.push(e),r?(e.config=this.config.newConnectionConfig(),e.changeUser({timeout:this.config.acquireTimeout},n)):e.ping({timeout:this.config.acquireTimeout},n)},Pool.prototype.releaseConnection=function(e){if(-1===this._acquiringConnections.indexOf(e)){if(e._pool){if(e._pool!==this)throw new Error("Connection released to wrong pool");if(-1!==this._freeConnections.indexOf(e))throw new Error("Connection already released");this._freeConnections.push(e),this.emit("release",e)}this._closed?this._connectionQueue.splice(0).forEach(function(e){var t=new Error("Pool is closed.");t.code="POOL_CLOSED",process.nextTick(function(){e(t)})}):this._connectionQueue.length&&this.getConnection(this._connectionQueue.shift())}},Pool.prototype.end=function(e){function i(i){!t&&(i||--r<=0)&&(t=!0,e(i))}this._closed=!0,"function"!=typeof e&&(e=function(e){if(e)throw e});for(var t=!1,r=0;0!==this._allConnections.length;)r++,this._purgeConnection(this._allConnections[0],i);0===r&&process.nextTick(i)},Pool.prototype.query=function(e,t,r){var i=Connection.createQuery(e,t,r);return"object"==typeof e&&"typeCast"in e||(i.typeCast=this.config.connectionConfig.typeCast),this.config.connectionConfig.trace&&(i._callSite=new Error),this.getConnection(function(e,t){return e?(i.on("error",function(){}),void i.end(e)):(i.once("end",function(){t.release()}),void t.query(i))}),i},Pool.prototype._enqueueCallback=function(e){if(this.config.queueLimit&&this._connectionQueue.length>=this.config.queueLimit)return void process.nextTick(function(){var t=new Error("Queue limit reached.");t.code="POOL_ENQUEUELIMIT",e(t)});var t=process.domain?process.domain.bind(e):e;this._connectionQueue.push(t),this.emit("enqueue")},Pool.prototype._needsChangeUser=function(e){var t=e.config,r=this.config.connectionConfig;return t.user!==r.user||t.database!==r.database||t.password!==r.password||t.charsetNumber!==r.charsetNumber},Pool.prototype._purgeConnection=function(e,t){var r=t||function(){};return"disconnected"===e.state&&e.destroy(),this._removeConnection(e),"disconnected"===e.state||e._protocol._quitSequence?void process.nextTick(r):void e._realEnd(r)},Pool.prototype._removeConnection=function(e){e._pool=null,spliceConnection(this._allConnections,e),spliceConnection(this._freeConnections,e),this.releaseConnection(e)},Pool.prototype.escape=function(e){return mysql.escape(e,this.config.connectionConfig.stringifyObjects,this.config.connectionConfig.timezone)},Pool.prototype.escapeId=function(e){return mysql.escapeId(e,!1)};